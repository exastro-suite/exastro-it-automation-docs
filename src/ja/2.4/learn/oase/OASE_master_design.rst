===================================
OASEを設定する際の事前設計について
===================================

具体的な設定の検討
===================

| では具体的な設定について考えてみましょう。

| アクションが実行される状況を見ると、

 | インスタンスが何台稼働している状況で、どのような通知が来たか

| という形で条件づけられているのがわかります。

| つまり、ルールを設定する際の条件となるフィルターは、

 | インスタンスが何台稼働しているか
 | どのような通知が来たか

| というものがあればよいことになります。

| ただ、通知が来た時に2つ以上のアクションを行う必要があるパターンもあるので、注意が必要です。

| 例えば、インスタンスが1台稼働している状況で、閾値100リクエスト/minを超過したというリクエスト数超過通知が来たら、

  | インスタンス1台稼働 + 閾値100リクエスト/min超過  ⇒  インスタンス2台にスケールアウト
  | インスタンス2台稼働 + 閾値100リクエスト/min超過  ⇒  インスタンス3台にスケールアウト

| というスケールアウトをするというアクションが2回実行される必要があります。

| つまり、

 | 通知が来たことにより実行されるスケールアウト
 | スケールアウトしたあとの状況でもリクエスト数がいまだ閾値を超えている場合のスケールアウト

| というアクションが行われるようにルールを設定してあげればよいことになります。

| 以上のように、それぞれのアクションが実行される条件は、

 | ①  通知内容  +  通知が来る前の状況
 | ②  ①のアクションが実行された後の状況  +  通知内容
 
| で決まることになります。

| 各状況の把握は、先に見たインスタンスが何台稼働しているか、というフィルターで把握可能です。
| 通知内容の把握は、先に見たどのような通知が来たか、というフィルターで把握可能です。

| ただ、①のルールで通知メールのイベントを参照されると、②で改めて同じイベントを参照することはできません。
| そのため、②で通知内容を参照するには、:doc:`OASE_advanced_sorry-switch-back` で用いた「元イベントのラベル継承」の設定を行う必要があります。
| この設定により、①の結論イベントに元となった通知メールのイベントからラベルを継承することができ、通知内容を②でも把握可能となります。

| ここで注意すべきは、:doc:`OASE_advanced_sorry-switch-back` で見たように「元イベントのラベル継承」の設定をすることでループする場合があるという点です。
| 今回の6パターンの設定においては、ループを発生させる必要はなく、ループが発生しないように設定する必要があります。

| 今回の6パターンの中では、

1. インスタンス3台のとき、リクエスト数超過通知:150

| のときにループが発生してしまいます。

| それ以外のパターンのときは、アクション実行後稼働しているインスタンス数が変化するため、そのルールの条件としているインスタンス数とは異なる形になりループはしません。

| そのため、

3. インスタンス3台のとき、リクエスト数超過通知:150
  
| のルールでは、「元イベントのラベル継承」の設定は行わず、Sorry画面への切り替えを示す結論イベントを付与する形にしましょう。

| またこの設定に合わせて、

4. インスタンス3台のとき、リクエスト数回復通知:50/100/150
   
| の通知が来る前の状況把握は、「インスタンス3台のとき」ではなく、「Sorry画面への切り替えが行われているとき」と設定するようにしましょう。

| ここまで整理できたら、具体的に以下の順にOASEの設定を行っていきましょう。
